ARG NODE_VERSION=22.19.0

FROM node:${NODE_VERSION}-alpine AS build
WORKDIR /app

# Install dependencies using the lockfile for reproducible builds
COPY frontend/package.json frontend/package-lock.json ./
RUN npm ci

# Copy application sources and produce the optimized build
COPY frontend/ .
RUN npm run build

FROM nginx:1.29-alpine-slim AS runtime
ENV NODE_ENV=production

# Copy the compiled assets into the nginx document root
COPY --from=build /app/dist /usr/share/nginx/html

EXPOSE 80
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 CMD wget -q -O- http://localhost || exit 1

CMD ["nginx", "-g", "daemon off;"]
