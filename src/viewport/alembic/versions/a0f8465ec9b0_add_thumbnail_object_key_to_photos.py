"""add thumbnail_object_key to photos

Revision ID: a0f8465ec9b0
Revises: c92e4b61bba9
Create Date: 2025-09-30 22:54:37.374781

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a0f8465ec9b0'
down_revision: Union[str, Sequence[str], None] = 'c92e4b61bba9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'galleries', ['id'])

    # Add thumbnail_object_key column as nullable first
    op.add_column('photos', sa.Column('thumbnail_object_key', sa.String(), nullable=True))

    # Fill existing records with object_key value (for backward compatibility)
    connection = op.get_bind()
    connection.execute(sa.text("UPDATE photos SET thumbnail_object_key = object_key WHERE thumbnail_object_key IS NULL"))

    # Now make the column NOT NULL
    op.alter_column('photos', 'thumbnail_object_key', nullable=False)

    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('photos', 'thumbnail_object_key')
    op.drop_constraint(None, 'galleries', type_='unique')
    # ### end Alembic commands ###
